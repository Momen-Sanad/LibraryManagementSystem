openapi: 3.0.0
info:
  title: Library Management API
  description: A RESTful API for managing books in a library.
  version: "1.0.0"
  contact:
    name: Library API Support
    email: support@libraryapi.example.com

servers:
  - url: http://localhost:5000
    description: Local development server

paths:
  /books:
    get:
      summary: List all books
      description: Retrieve a list of all books in the library.
      responses:
        "200":
          description: A JSON array of all books.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
    post:
      summary: Add a new book
      description: Add a new book to the library collection.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookInput"
      responses:
        "201":
          description: Book successfully added.
        "400":
          description: Invalid input.

  /books/search:
    get:
      summary: Search for books
      description: Search for books by author, genre, or published year.
      parameters:
        - name: author
          in: query
          description: Filter by author name.
          required: false
          schema:
            type: string
        - name: genre
          in: query
          description: Filter by genre.
          required: false
          schema:
            type: string
        - name: published_year
          in: query
          description: Filter by published year.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: A list of books matching the search criteria.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
        "400":
          description: Invalid query parameters.

  /books/{isbn}:
    get:
      summary: Get a book by ISBN
      description: Retrieve details of a specific book using its ISBN.
      parameters:
        - name: isbn
          in: path
          required: true
          description: The ISBN of the book to retrieve.
          schema:
            type: string
      responses:
        "200":
          description: Book details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        "404":
          description: Book not found.
    delete:
      summary: Delete a book
      description: Remove a book from the library using its ISBN.
      parameters:
        - name: isbn
          in: path
          required: true
          description: The ISBN of the book to delete.
          schema:
            type: string
      responses:
        "204":
          description: Book successfully deleted.
        "404":
          description: Book not found.
    patch:
      summary: Update book details
      description: Update details of a specific book using its ISBN.
      parameters:
        - name: isbn
          in: path
          required: true
          description: The ISBN of the book to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookInput"
      responses:
        "200":
          description: Book details updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        "404":
          description: Book not found.

components:
  schemas:
    Book:
      type: object
      properties:
        title:
          type: string
          example: "To Kill a Mockingbird"
        author:
          type: string
          example: "Harper Lee"
        published_year:
          type: integer
          example: 1960
        isbn:
          type: string
          example: "9780061120084"
        genre:
          type: string
          example: "Fiction"
    BookInput:
      type: object
      properties:
        title:
          type: string
          example: "To Kill a Mockingbird"
        author:
          type: string
          example: "Harper Lee"
        published_year:
          type: integer
          example: 1960
        isbn:
          type: string
          example: "9780061120084"
        genre:
          type: string
          example: "Fiction"
      required:
        - title
        - author
        - published_year
        - isbn